
name: Docker Image Build/Publish Manually

on:
  workflow_dispatch:
    inputs:
      commit_id:
        description: Shinobi commit id(like 'master' 'dev' '0aef86bd')
        required: true
        default: dev
      image_name:
        description: Docker image name(without username)
        required: true
        default: docker-shinobi

jobs:
  build_push:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        BRANCH_PREFIX:
          - ${{ github.event.inputs.commit_id }}
        EXCLUDE_DB:
          - 'true'
          - 'false'
        BASE_IMAGE:
          - node:18-buster-slim
          - arm32v7/node:18-buster-slim
          - arm64v8/node:18-buster-slim
          - nvidia/cuda:11.7.1-cudnn8-runtime-ubuntu22.04
        include:
          - BASE_IMAGE: node:18-buster-slim
            ARCH_TYPE: -amd64
            platform: linux/amd64
            merge: true
          - BASE_IMAGE: arm32v7/node:18-buster-slim
            ARCH_TYPE: -arm32v7
            platform: linux/arm/v7
            merge: true
          - BASE_IMAGE: arm64v8/node:18-buster-slim
            ARCH_TYPE: -arm64v8
            platform: linux/arm64
            merge: true
          - BASE_IMAGE: nvidia/cuda:11.7.1-cudnn8-runtime-ubuntu22.04
            ARCH_TYPE: -nvidia
            platform: linux/amd64
            merge: false
          - EXCLUDE_DB: 'true'
            NO_DB_SUFIX: ''
          - EXCLUDE_DB: 'false'
            NO_DB_SUFIX: -no-db

    steps:
      - name: Clone
        run: |
          git clone https://gitlab.com/Shinobi-Systems/Shinobi.git Shinobi
          cd Shinobi
          git checkout ${{ matrix.BRANCH_PREFIX }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/${{ github.event.inputs.image_name }}
          tags:  |
            type=raw,value=${{ matrix.BRANCH_PREFIX }}
          flavor: |
            latest=false
            suffix=${{ matrix.ARCH_TYPE }}${{ matrix.NO_DB_SUFIX }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: ./Shinobi
          build-args: |
            EXCLUDE_DB=${{ matrix.EXCLUDE_DB }}
            BASE_IMAGE=${{ matrix.BASE_IMAGE }}
          platforms: ${{ matrix.platform }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ./Shinobi
          build-args: |
            EXCLUDE_DB=${{ matrix.EXCLUDE_DB }}
            BASE_IMAGE=${{ matrix.BASE_IMAGE }}
          platforms: ${{ matrix.platform }}
          outputs: type=image,name=${{ secrets.DOCKER_USERNAME }}/${{ github.event.inputs.image_name }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
       
      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge_push:
    runs-on: ubuntu-latest

    needs:
      - build_push

    steps:
      - name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: digests
          path: /tmp/digests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/${{ github.event.inputs.image_name }}
          tags:  |
            type=raw,value=${{ github.event.inputs.commit_id }}
          flavor: |
            latest=false

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ secrets.DOCKER_USERNAME }}/${{ github.event.inputs.image_name }}@sha256:%s ' *)          

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ secrets.DOCKER_USERNAME }}/${{ github.event.inputs.image_name }}:${{ steps.meta.outputs.version }}
